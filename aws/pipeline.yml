---
groups:
  - name: certify-aws
    jobs:
      - bats-centos
      - bats-ubuntu
      - end2end-us
      - end2end-cn
      - test-upgrade
      - certify-centos
      - certify-ubuntu
      - prepare-infrastructure-us
      - teardown-infrastructure-us
      - prepare-infrastructure-cn
      - teardown-infrastructure-cn

shared:
  - &prepare-director
    task: prepare-director
    file: pipelines/aws/tasks/prepare-director.yml
    params:
        BOSH_RELEASE_URI:       file://bosh-release/release.tgz
        CPI_RELEASE_URI:        file://cpi-release/release.tgz
        STEMCELL_URI:           file://stemcell/stemcell.tgz
        BOSH_DIRECTOR_USERNAME: {{BOSH_DIRECTOR_USERNAME}}
        BOSH_DIRECTOR_PASSWORD: {{BOSH_DIRECTOR_PASSWORD}}
        AWS_ACCESS_KEY:         {{AWS_ACCESS_KEY}}
        AWS_SECRET_KEY:         {{AWS_SECRET_KEY}}
        AWS_REGION_NAME:        {{AWS_REGION_NAME}}
        PUBLIC_KEY_NAME:        {{PUBLIC_KEY_NAME}}
        PRIVATE_KEY_DATA:       {{PRIVATE_KEY_DATA}}
        AWS_STACK_NAME:         ""

  - &deploy-director
    task: deploy-director
    file: pipelines/shared/tasks/deploy-director.yml
    params:
      BOSH_DIRECTOR_USERNAME: {{BOSH_DIRECTOR_USERNAME}}
      BOSH_DIRECTOR_PASSWORD: {{BOSH_DIRECTOR_PASSWORD}}

  - &prepare-manual-bats
    task: prepare-manual-bats
    file: pipelines/aws/tasks/prepare-manual-bats.yml
    params:
      AWS_ACCESS_KEY:         {{AWS_ACCESS_KEY}}
      AWS_SECRET_KEY:         {{AWS_SECRET_KEY}}
      AWS_REGION_NAME:        {{AWS_REGION_NAME}}
      BAT_VCAP_PASSWORD:      {{BAT_VCAP_PASSWORD}}
      PUBLIC_KEY_NAME:        {{PUBLIC_KEY_NAME}}
      BOSH_DIRECTOR_USERNAME: {{BOSH_DIRECTOR_USERNAME}}
      BOSH_DIRECTOR_PASSWORD: {{BOSH_DIRECTOR_PASSWORD}}
      STEMCELL_NAME:          ""
      AWS_STACK_NAME:         ""

  - &run-bats
    task: run-bats
    file: pipelines/shared/tasks/run-bats.yml

  - &run-e2e
    task: run-e2e
    file: pipelines/aws/tasks/run-e2e.yml
    params:
      AWS_ACCESS_KEY:         {{AWS_ACCESS_KEY}}
      AWS_SECRET_KEY:         {{AWS_SECRET_KEY}}
      AWS_REGION_NAME:        {{AWS_REGION_NAME}}
      BOSH_DIRECTOR_USERNAME: {{BOSH_DIRECTOR_USERNAME}}
      BOSH_DIRECTOR_PASSWORD: {{BOSH_DIRECTOR_PASSWORD}}
      AWS_STACK_NAME:         {{AWS_E2E_STACK_NAME}}
      STEMCELL_NAME:          ""

  - &teardown
    task: teardown
    file: pipelines/shared/tasks/teardown.yml
    params:
      BOSH_DIRECTOR_USERNAME: {{BOSH_DIRECTOR_USERNAME}}
      BOSH_DIRECTOR_PASSWORD: {{BOSH_DIRECTOR_PASSWORD}}
      DEPLOYMENT_NAME:        certification

jobs:
  - name: end2end-us
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release,    trigger: true}
        - {get: cpi-release,     trigger: true}
        - {get: stemcell,        trigger: true, resource: ubuntu-stemcell}
        - {get: centos-stemcell, trigger: false} # pass-thru to certification jobs
        - {get: pipelines,       trigger: false}
        - {get: bosh-init,       trigger: false}

      - <<: *prepare-director
        file: pipelines/aws/tasks/prepare-director-iam.yml
        params:
          AWS_STACK_NAME:   {{AWS_E2E_STACK_NAME}}

      - do:
          - <<: *deploy-director

          - <<: *run-e2e
            params:
              STEMCELL_NAME:    *ubuntu-stemcell
              AWS_STACK_NAME:   {{AWS_E2E_STACK_NAME}}

        ensure:
          <<: *teardown
          params:
            DEPLOYMENT_NAME: e2e-test

  - name: end2end-cn
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release,    trigger: true}
        - {get: cpi-release,     trigger: true}
        - {get: stemcell,        trigger: true, resource: ubuntu-stemcell}
        - {get: centos-stemcell, trigger: false} # pass-thru to certification jobs
        - {get: pipelines,       trigger: false}
        - {get: bosh-init,       trigger: false}

      - <<: *prepare-director
        file: pipelines/aws/tasks/prepare-director-iam.yml
        params:
          AWS_STACK_NAME:   {{AWS_E2E_STACK_NAME}}
          AWS_ACCESS_KEY:   {{AWS_ACCESS_KEY__CN}}
          AWS_SECRET_KEY:   {{AWS_SECRET_KEY__CN}}
          AWS_REGION_NAME:  cn-north-1

      - do:
          - <<: *deploy-director
            params:
              BOSH_INIT_LOG_LEVEL: debug

          - <<: *run-e2e
            params:
              AWS_ACCESS_KEY:   {{AWS_ACCESS_KEY__CN}}
              AWS_SECRET_KEY:   {{AWS_SECRET_KEY__CN}}
              AWS_REGION_NAME:  cn-north-1
              STEMCELL_NAME:    *ubuntu-stemcell

        ensure:
          <<: *teardown
          params:
            DEPLOYMENT_NAME: e2e-test

  - name: bats-centos
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release, trigger: true}
        - {get: cpi-release,  trigger: true}
        - {get: stemcell,     trigger: true, resource: centos-stemcell}
        - {get: pipelines,    trigger: false}
        - {get: bosh-init,    trigger: false}
        - {get: bats,         trigger: false}

      - <<: *prepare-director
        params:
          AWS_STACK_NAME: centos-manual-bats

      - do:
          - <<: *deploy-director

          - <<: *prepare-manual-bats
            params:
              STEMCELL_NAME:  *centos-stemcell
              AWS_STACK_NAME: centos-manual-bats

          - <<: *run-bats

        ensure:
          <<: *teardown

  - name: bats-ubuntu
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release, trigger: true}
        - {get: cpi-release,  trigger: true}
        - {get: stemcell,     trigger: true, resource: ubuntu-stemcell}
        - {get: pipelines,    trigger: false}
        - {get: bosh-init,    trigger: false}
        - {get: bats,         trigger: false}

      - <<: *prepare-director
        params:
          AWS_STACK_NAME: ubuntu-manual-bats

      - do:
          - <<: *deploy-director

          - <<: *prepare-manual-bats
            params:
              STEMCELL_NAME:  *ubuntu-stemcell
              AWS_STACK_NAME: ubuntu-manual-bats

          - <<: *run-bats
        ensure:
          <<: *teardown

  - name: test-upgrade
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release,    trigger: true}
        - {get: cpi-release,     trigger: true}
        - {get: stemcell,        trigger: true, resource: ubuntu-stemcell}
        - {get: pipelines,       trigger: false}
        - {get: bosh-init,       trigger: false}
        - {get: centos-stemcell, trigger: false} # pass-through

      - <<: *prepare-director
        params:
          AWS_STACK_NAME:    certify-upgrade
          BOSH_RELEASE_URI:  https://bosh.cloudfoundry.org/d/github.com/cloudfoundry/bosh?v=229
          BOSH_RELEASE_SHA1: caad7d5353a76f81550868c54c6e0b441b378864
          CPI_RELEASE_URI:   https://bosh.io/d/github.com/cloudfoundry-incubator/bosh-aws-cpi-release?v=36
          CPI_RELEASE_SHA1:  db2a6c6cdd5ff9f77bf083e10118fa72e1f5e181
          STEMCELL_URI:      https://bosh.io/d/stemcells/bosh-aws-xen-hvm-ubuntu-trusty-go_agent?v=3143
          STEMCELL_SHA1:     55340cfea16f30c1d1756e4f1cfae20efba02853
          USE_REDIS:         true

      - do:
        - <<: *deploy-director

        - task: prepare-deployment
          file: pipelines/aws/tasks/prepare-deployment.yml
          params:
            BOSH_DIRECTOR_USERNAME:    {{BOSH_DIRECTOR_USERNAME}}
            BOSH_DIRECTOR_PASSWORD:    {{BOSH_DIRECTOR_PASSWORD}}
            AWS_ACCESS_KEY:            {{AWS_ACCESS_KEY}}
            AWS_SECRET_KEY:            {{AWS_SECRET_KEY}}
            AWS_REGION_NAME:           {{AWS_REGION_NAME}}
            AWS_STACK_NAME:            certify-upgrade
            RELEASE_NAME:              certification
            DEPLOYMENT_NAME:           certification
            STEMCELL_NAME:             bosh-aws-xen-hvm-ubuntu-trusty-go_agent

        - task: create-deployment
          file: pipelines/aws/tasks/create-deployment.yml
          params:
            BOSH_DIRECTOR_USERNAME:    {{BOSH_DIRECTOR_USERNAME}}
            BOSH_DIRECTOR_PASSWORD:    {{BOSH_DIRECTOR_PASSWORD}}
            AWS_ACCESS_KEY:            {{AWS_ACCESS_KEY}}
            AWS_SECRET_KEY:            {{AWS_SECRET_KEY}}
            AWS_REGION_NAME:           {{AWS_REGION_NAME}}
            AWS_STACK_NAME:            certify-upgrade
            RELEASE_NAME:              certification

        - <<: *prepare-director
          output_mapping: { director-config: new-director-config }

        - task: test-upgrade
          file: pipelines/shared/tasks/test-upgrade.yml
          output_mapping: { new-director-state: director-state }
          params:
            DEPLOYMENT_NAME:        certification

        ensure:
          <<: *teardown

  - name: certify-centos
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release, trigger: true, passed: [bats-centos, end2end-us]}
        - {get: cpi-release,  trigger: true, passed: [bats-centos, end2end-us]}
        - {get: stemcell,     trigger: true, passed: [bats-centos, end2end-us, test-upgrade], resource: centos-stemcell}
        - {get: pipelines,    trigger: false}

      - task: generate
        file: pipelines/shared/tasks/generate-receipt.yml
        params:
          CPI_RELEASE_NAME: bosh-aws-cpi
          STEMCELL_NAME:    *centos-stemcell

      - {put: receipt, params: {file: certification/*-receipt.json}}

  - name: certify-ubuntu
    serial: true
    plan:
      - aggregate:
        - {get: bosh-release, trigger: true, passed: [bats-ubuntu, end2end-us]}
        - {get: cpi-release,  trigger: true, passed: [bats-ubuntu, end2end-us]}
        - {get: stemcell,     trigger: true, passed: [bats-ubuntu, end2end-us, test-upgrade], resource: ubuntu-stemcell}
        - {get: pipelines,    trigger: false}

      - task: generate
        file: pipelines/shared/tasks/generate-receipt.yml
        params:
          CPI_RELEASE_NAME: bosh-aws-cpi
          STEMCELL_NAME:    *ubuntu-stemcell

      - {put: receipt, params: {file: certification/*-receipt.json}}

  - name: prepare-infrastructure-us
    serial: true
    plan:
      - {get: pipelines, trigger: false}
      - aggregate:
        - task: prepare-ubuntu-manual-bats-infrastructure
          file: pipelines/aws/tasks/prepare-infrastructure.yml
          params:
            AWS_STACK_NAME:     ubuntu-manual-bats
            AWS_ACCESS_KEY:     {{AWS_ACCESS_KEY}}
            AWS_SECRET_KEY:     {{AWS_SECRET_KEY}}
            AWS_REGION_NAME:    {{AWS_REGION_NAME}}
        - task: prepare-centos-manual-bats-infrastructure
          file: pipelines/aws/tasks/prepare-infrastructure.yml
          params:
            AWS_STACK_NAME:     centos-manual-bats
            AWS_ACCESS_KEY:     {{AWS_ACCESS_KEY}}
            AWS_SECRET_KEY:     {{AWS_SECRET_KEY}}
            AWS_REGION_NAME:    {{AWS_REGION_NAME}}
        - task: prepare-e2e-infrastructure
          file: pipelines/aws/tasks/prepare-infrastructure.yml
          params:
            AWS_STACK_NAME:     {{AWS_E2E_STACK_NAME}}
            AWS_ACCESS_KEY:     {{AWS_ACCESS_KEY}}
            AWS_SECRET_KEY:     {{AWS_SECRET_KEY}}
            AWS_REGION_NAME:    {{AWS_REGION_NAME}}
        - task: prepare-upgrade-infrastructure
          file: pipelines/aws/tasks/prepare-infrastructure.yml
          params:
            AWS_ACCESS_KEY:     {{AWS_ACCESS_KEY}}
            AWS_SECRET_KEY:     {{AWS_SECRET_KEY}}
            AWS_REGION_NAME:    {{AWS_REGION_NAME}}
            AWS_STACK_NAME:     certify-upgrade

  - name: teardown-infrastructure-us
    serial: true
    plan:
      - {get: pipelines, trigger: false}
      - aggregate:
        - task: teardown-ubuntu-manual-bats-infrastructure
          file: pipelines/aws/tasks/teardown-infrastructure.yml
          params:
            AWS_ACCESS_KEY:  {{AWS_ACCESS_KEY}}
            AWS_SECRET_KEY:  {{AWS_SECRET_KEY}}
            AWS_REGION_NAME: {{AWS_REGION_NAME}}
            AWS_STACK_NAME:  ubuntu-manual-bats
        - task: teardown-centos-manual-bats-infrastructure
          file: pipelines/aws/tasks/teardown-infrastructure.yml
          params:
            AWS_ACCESS_KEY:  {{AWS_ACCESS_KEY}}
            AWS_SECRET_KEY:  {{AWS_SECRET_KEY}}
            AWS_REGION_NAME: {{AWS_REGION_NAME}}
            AWS_STACK_NAME:  centos-manual-bats
        - task: teardown-e2e-infrastructure
          file: pipelines/aws/tasks/teardown-infrastructure.yml
          params:
            AWS_ACCESS_KEY:  {{AWS_ACCESS_KEY}}
            AWS_SECRET_KEY:  {{AWS_SECRET_KEY}}
            AWS_REGION_NAME: {{AWS_REGION_NAME}}
            AWS_STACK_NAME:  {{AWS_E2E_STACK_NAME}}
        - task: teardown-upgrade-infrastructure
          file: pipelines/aws/tasks/teardown-infrastructure.yml
          params:
            AWS_ACCESS_KEY:  {{AWS_ACCESS_KEY}}
            AWS_SECRET_KEY:  {{AWS_SECRET_KEY}}
            AWS_REGION_NAME: {{AWS_REGION_NAME}}
            AWS_STACK_NAME:  certify-upgrade

  - name: prepare-infrastructure-cn
    serial: true
    plan:
      - {get: pipelines, trigger: false}
      - aggregate:
        - task: prepare-e2e-infrastructure
          file: pipelines/aws/tasks/prepare-infrastructure.yml
          params:
            AWS_STACK_NAME:     {{AWS_E2E_STACK_NAME}}
            AWS_ACCESS_KEY:     {{AWS_ACCESS_KEY__CN}}
            AWS_SECRET_KEY:     {{AWS_SECRET_KEY__CN}}
            AWS_REGION_NAME:    cn-north-1

  - name: teardown-infrastructure-cn
    serial: true
    plan:
      - {get: pipelines, trigger: false}
      - aggregate:
        - task: teardown-e2e-infrastructure
          file: pipelines/aws/tasks/teardown-infrastructure.yml
          params:
            AWS_STACK_NAME:  {{AWS_E2E_STACK_NAME}}
            AWS_ACCESS_KEY:  {{AWS_ACCESS_KEY__CN}}
            AWS_SECRET_KEY:  {{AWS_SECRET_KEY__CN}}
            AWS_REGION_NAME: cn-north-1

resources:
  - name: pipelines
    type: git
    source:
      uri: https://github.com/cloudfoundry-incubator/bosh-cpi-certification
      branch: master

  - name: cpi-release
    type: bosh-io-release
    source:
      repository: cloudfoundry-incubator/bosh-aws-cpi-release

  - name: bosh-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/bosh

  - name: bats
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
      # TODO: change this back to master after bats promotion #118516887
      branch: aws-missing-az # master

  - name: ubuntu-stemcell
    type: s3
    source:
      name: &ubuntu-stemcell bosh-aws-xen-hvm-ubuntu-trusty-go_agent
      regexp: light-bosh-stemcell-([0-9.]+)-aws-xen-hvm-ubuntu-trusty-go_agent.tgz
      bucket: bosh-aws-light-stemcells
      region_name: us-east-1

  - name: centos-stemcell
    type: s3
    source:
      name: &centos-stemcell bosh-aws-xen-hvm-centos-7-go_agent
      regexp: light-bosh-stemcell-([0-9.]+)-aws-xen-hvm-centos-7-go_agent.tgz
      bucket: bosh-aws-light-stemcells
      region_name: us-east-1

  - name: bosh-init
    type: s3
    source:
      regexp: bosh-init-([0-9.]+)-linux-amd64
      bucket: bosh-init-artifacts
      region_name: us-east-1

  - name: receipt
    type: s3
    source:
      access_key_id: {{certification__bucket_access_key}}
      secret_access_key: {{certification__bucket_secret_key}}
      bucket: {{certification__bucket}}
      regexp: .*-receipt\.json
      region_name: us-east-1
