{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Template for creating BOSH AWS infrastructure for concourse ci.",
  "Parameters" : {
    "KeyPairName" : {
      "Description" : "Name of an existing EC2 KeyPair used for NAT instance",
      "Type" : "String",
      "Default" : "certification",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    },
    "TagName" : {
      "Description" : "All created resources will be tagged with this name",
      "Type" : "String",
      "Default" : "certification",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    }
  },
  "Mappings": {
    "IPConfigurations": {
      "VPC": {
        "CIDR": "10.0.0.0/16"
      },
      "Public": {
        "CIDR": "10.0.0.0/24",
        "DirectorPrivate": "10.0.0.6",
        "Gateway": "10.0.0.1",
        "DNS": "10.0.0.2",
        "ReservedRange": "10.0.0.2-10.0.0.9",
        "StaticRange": "10.0.0.10-10.0.0.30",
        "Static1": "10.0.0.29",
        "Static2": "10.0.0.30"
      }
    },
    "Region2Principal": {
      "us-east-1": { "EC2Principal": "ec2.amazonaws.com" },
      "us-west-2": { "EC2Principal": "ec2.amazonaws.com" },
      "us-west-1": { "EC2Principal": "ec2.amazonaws.com" },
      "eu-west-1": { "EC2Principal": "ec2.amazonaws.com" },
      "ap-southeast-1": { "EC2Principal": "ec2.amazonaws.com" },
      "ap-northeast-1": { "EC2Principal": "ec2.amazonaws.com" },
      "ap-southeast-2": { "EC2Principal": "ec2.amazonaws.com" },
      "sa-east-1": { "EC2Principal": "ec2.amazonaws.com" },
      "cn-north-1": { "EC2Principal": "ec2.amazonaws.com.cn" },
      "eu-central-1": { "EC2Principal": "ec2.amazonaws.com" }
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap": [ "IPConfigurations", "VPC", "CIDR" ] },
        "Tags": [ {"Key": "Name", "Value": { "Ref" : "TagName" } } ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [ { "Key": "Name", "Value": { "Ref" : "TagName" } } ]
      }
    },
    "AttachGateway": {
      "DependsOn": [ "VPC", "InternetGateway" ],
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "InternetGatewayId": { "Ref": "InternetGateway" }
      }
    },
    "NetworkAcl": {
      "DependsOn": [ "VPC" ],
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "Tags": [ { "Key": "Name", "Value": { "Ref" : "TagName" } } ]
      }
    },
    "InBoundAllTrafficAclEntry": {
      "DependsOn": [ "NetworkAcl" ],
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NetworkAcl" },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0"
      }
    },
    "OutBoundAllTrafficAclEntry": {
      "DependsOn": [ "NetworkAcl" ],
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": { "Ref": "NetworkAcl" },
        "RuleNumber": "100",
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0"
      }
    },
    "CISecurityGroup": {
      "DependsOn": [ "VPC" ],
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "GroupDescription": "allows local and concourse traffic",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "-1",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [ { "Key": "Name", "Value": "ci" } ]
      }
    },
    "S3Bucket": {
      "Type": "AWS::S3::Bucket",
      "DeletionPolicy": "Delete",
      "Properties": {
        "AccessControl": "Private",
        "Tags": [ { "Key": "Name", "Value": { "Ref" : "TagName" } } ]
      }
    },
    "ELB": {
      "DependsOn": [ "PublicSubnet", "CISecurityGroup" ],
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Listeners": [
          {
            "InstancePort": 80,
            "LoadBalancerPort": 80,
            "Protocol": "HTTP"
          }
        ],
        "SecurityGroups": [ { "Ref": "CISecurityGroup" } ],
        "Subnets": [ { "Ref": "PublicSubnet" } ],
        "Tags": [ { "Key": "Name", "Value": { "Ref" : "TagName" } } ]
      }
    },
    "DirectorEIP": {
      "DependsOn": [ "AttachGateway" ],
      "Type": "AWS::EC2::EIP",
      "Properties": { "Domain": "vpc" }
    },
    "DeploymentEIP": {
      "DependsOn": [ "AttachGateway" ],
      "Type": "AWS::EC2::EIP",
      "Properties": { "Domain": "vpc" }
    },
    "PublicSubnet": {
      "DependsOn": [ "VPC" ],
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "CidrBlock": { "Fn::FindInMap": [ "IPConfigurations", "Public", "CIDR" ] },
        "MapPublicIpOnLaunch": true,
        "Tags": [ { "Key": "Name", "Value": {
          "Fn::Join": [ "-", [ "public", { "Ref" : "TagName" } ] ]
        } } ]
      }
    },
    "PublicSubnetRouteTableAssociation": {
      "DependsOn": [ "PublicSubnet", "PublicRouteTable" ],
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicSubnet" },
        "RouteTableId": { "Ref": "PublicRouteTable" }
      }
    },
    "PublicSubnetNetworkAclAssociation": {
      "DependsOn": [ "PublicSubnet", "NetworkAcl" ],
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicSubnet" },
        "NetworkAclId": { "Ref": "NetworkAcl" }
      }
    },
    "PublicRouteTable": {
      "DependsOn": [ "VPC" ],
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "Tags": [ { "Key": "Name", "Value": {
          "Fn::Join": [ "-", [ "public", { "Ref" : "TagName" } ] ]
        } } ]
      }
    },
    "PublicRoute": {
      "DependsOn": [ "PublicRouteTable", "AttachGateway" ],
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "PublicRouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "InternetGateway" }
      }
    },
    "RootRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": { "Fn::FindInMap": [ "Region2Principal", { "Ref": "AWS::Region" }, "EC2Principal"]}
              },
              "Action": [ "sts:AssumeRole" ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "EC2Policy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                { "Action": "ec2:*", "Effect": "Allow", "Resource": "*" },
                { "Effect": "Allow", "Action": "elasticloadbalancing:*", "Resource": "*" }
              ]
            }
          }
        ]
      }
    },
    "S3Policy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "S3Policy",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [ { "Effect": "Allow", "Action": [ "s3:*" ], "Resource": "*" } ]
        },
        "Roles": [ { "Ref": "RootRole" } ]
      }
    },
    "IAMPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "IAMPolicy",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [ { "Effect": "Allow", "Action": [ "iam:PassRole" ], "Resource": "*" } ]
        },
        "Roles": [ { "Ref": "RootRole" } ]
      }
    },
    "InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ { "Ref": "RootRole" } ]
      }
    }
  },
  "Outputs": {
    "VPCID": { "Value": { "Ref": "VPC"}},
    "SecurityGroupID": { "Value": { "Ref": "CISecurityGroup"}},
    "DirectorEIP": { "Value": { "Ref": "DirectorEIP"}},
    "DirectorStaticIP": { "Value": { "Fn::FindInMap": [ "IPConfigurations", "Public", "DirectorPrivate"]}},
    "DeploymentEIP": { "Value": { "Ref": "DeploymentEIP"}},
    "AvailabilityZone": { "Value": { "Fn::GetAtt": [ "PublicSubnet", "AvailabilityZone"]}},
    "PublicSubnetID": { "Value": { "Ref": "PublicSubnet"}},
    "PublicCIDR": { "Value": { "Fn::FindInMap": [ "IPConfigurations", "Public", "CIDR"]}},
    "PublicGateway": { "Value": { "Fn::FindInMap": [ "IPConfigurations", "Public", "Gateway"]}},
    "DNS": { "Value": { "Fn::FindInMap": [ "IPConfigurations", "Public", "DNS"]}},
    "ReservedRange": { "Value": { "Fn::FindInMap": [ "IPConfigurations", "Public", "ReservedRange"]}},
    "StaticRange": { "Value": { "Fn::FindInMap": [ "IPConfigurations", "Public", "StaticRange"]}},
    "StaticIP1": { "Value": { "Fn::FindInMap": [ "IPConfigurations", "Public", "Static1"]}},
    "StaticIP2": { "Value": { "Fn::FindInMap": [ "IPConfigurations", "Public", "Static2"]}},
    "BlobstoreBucketName": { "Value": { "Ref": "S3Bucket"}},
    "ELB": { "Value": { "Ref": "ELB" }},
    "IAMInstanceProfile": { "Value": { "Ref": "InstanceProfile" }}
  }
}
